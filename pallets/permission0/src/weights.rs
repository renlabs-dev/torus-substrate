
//! Autogenerated weights for `pallet_permission0`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 43.0.0
//! DATE: 2025-08-11, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Luizs-MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/release/torus-node
// benchmark
// pallet
// --pallet
// pallet_permission0
// --chain
// dev
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// pallets/permission0/src/weights.rs
// --template=./.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use polkadot_sdk::{
    frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}},
    *,
};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_permission0`.
pub trait WeightInfo {
	fn delegate_emission_permission() -> Weight;
	fn revoke_permission() -> Weight;
	fn execute_permission() -> Weight;
	fn toggle_permission_accumulation() -> Weight;
	fn enforcement_execute_permission() -> Weight;
	fn set_enforcement_authority() -> Weight;
	fn delegate_curator_permission() -> Weight;
	fn delegate_namespace_permission() -> Weight;
}

/// Weights for `pallet_permission0` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Torus0::Agents` (r:3 w:0)
	/// Proof: `Torus0::Agents` (`max_values`: None, `max_size`: Some(857), added: 3332, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::AccumulatedStreamAmounts` (r:1 w:1)
	/// Proof: `Permission0::AccumulatedStreamAmounts` (`max_values`: None, `max_size`: Some(112), added: 2587, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByDelegator` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByDelegator` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByRecipient` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByRecipient` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	fn delegate_emission_permission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `349`
		//  Estimated: `71354`
		// Minimum execution time: 30_000_000 picoseconds.
		Weight::from_parts(30_000_000, 71354)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByDelegator` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByDelegator` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByRecipient` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByRecipient` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::AccumulatedStreamAmounts` (r:0 w:1)
	/// Proof: `Permission0::AccumulatedStreamAmounts` (`max_values`: None, `max_size`: Some(112), added: 2587, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::RevocationTracking` (r:0 w:1)
	/// Proof: `Permission0::RevocationTracking` (`max_values`: None, `max_size`: Some(353), added: 2828, mode: `MaxEncodedLen`)
	fn revoke_permission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `591`
		//  Estimated: `71354`
		// Minimum execution time: 25_000_000 picoseconds.
		Weight::from_parts(26_000_000, 71354)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::AccumulatedStreamAmounts` (r:2 w:1)
	/// Proof: `Permission0::AccumulatedStreamAmounts` (`max_values`: None, `max_size`: Some(112), added: 2587, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn execute_permission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `546`
		//  Estimated: `71354`
		// Minimum execution time: 34_000_000 picoseconds.
		Weight::from_parts(35_000_000, 71354)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::EnforcementTracking` (r:0 w:1)
	/// Proof: `Permission0::EnforcementTracking` (`max_values`: None, `max_size`: Some(355), added: 2830, mode: `MaxEncodedLen`)
	fn toggle_permission_accumulation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `393`
		//  Estimated: `71354`
		// Minimum execution time: 12_000_000 picoseconds.
		Weight::from_parts(12_000_000, 71354)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::EnforcementTracking` (r:1 w:1)
	/// Proof: `Permission0::EnforcementTracking` (`max_values`: None, `max_size`: Some(355), added: 2830, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::AccumulatedStreamAmounts` (r:2 w:1)
	/// Proof: `Permission0::AccumulatedStreamAmounts` (`max_values`: None, `max_size`: Some(112), added: 2587, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn enforcement_execute_permission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `583`
		//  Estimated: `71354`
		// Minimum execution time: 39_000_000 picoseconds.
		Weight::from_parts(40_000_000, 71354)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	fn set_enforcement_authority() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `393`
		//  Estimated: `71354`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(14_000_000, 71354)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByDelegator` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByDelegator` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByRecipient` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByRecipient` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	fn delegate_curator_permission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `71354`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(16_000_000, 71354)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Torus0::Agents` (r:4 w:0)
	/// Proof: `Torus0::Agents` (`max_values`: None, `max_size`: Some(857), added: 3332, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:3 w:2)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	/// Storage: `Torus0::Namespaces` (r:2 w:0)
	/// Proof: `Torus0::Namespaces` (`max_values`: None, `max_size`: Some(347), added: 2822, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByDelegator` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByDelegator` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByRecipient` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByRecipient` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	fn delegate_namespace_permission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1792`
		//  Estimated: `212082`
		// Minimum execution time: 65_000_000 picoseconds.
		Weight::from_parts(66_000_000, 212082)
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `Torus0::Agents` (r:3 w:0)
	/// Proof: `Torus0::Agents` (`max_values`: None, `max_size`: Some(857), added: 3332, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::AccumulatedStreamAmounts` (r:1 w:1)
	/// Proof: `Permission0::AccumulatedStreamAmounts` (`max_values`: None, `max_size`: Some(112), added: 2587, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByDelegator` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByDelegator` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByRecipient` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByRecipient` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	fn delegate_emission_permission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `349`
		//  Estimated: `71354`
		// Minimum execution time: 30_000_000 picoseconds.
		Weight::from_parts(30_000_000, 71354)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByDelegator` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByDelegator` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByRecipient` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByRecipient` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::AccumulatedStreamAmounts` (r:0 w:1)
	/// Proof: `Permission0::AccumulatedStreamAmounts` (`max_values`: None, `max_size`: Some(112), added: 2587, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::RevocationTracking` (r:0 w:1)
	/// Proof: `Permission0::RevocationTracking` (`max_values`: None, `max_size`: Some(353), added: 2828, mode: `MaxEncodedLen`)
	fn revoke_permission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `591`
		//  Estimated: `71354`
		// Minimum execution time: 25_000_000 picoseconds.
		Weight::from_parts(26_000_000, 71354)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::AccumulatedStreamAmounts` (r:2 w:1)
	/// Proof: `Permission0::AccumulatedStreamAmounts` (`max_values`: None, `max_size`: Some(112), added: 2587, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn execute_permission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `546`
		//  Estimated: `71354`
		// Minimum execution time: 34_000_000 picoseconds.
		Weight::from_parts(35_000_000, 71354)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::EnforcementTracking` (r:0 w:1)
	/// Proof: `Permission0::EnforcementTracking` (`max_values`: None, `max_size`: Some(355), added: 2830, mode: `MaxEncodedLen`)
	fn toggle_permission_accumulation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `393`
		//  Estimated: `71354`
		// Minimum execution time: 12_000_000 picoseconds.
		Weight::from_parts(12_000_000, 71354)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::EnforcementTracking` (r:1 w:1)
	/// Proof: `Permission0::EnforcementTracking` (`max_values`: None, `max_size`: Some(355), added: 2830, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::AccumulatedStreamAmounts` (r:2 w:1)
	/// Proof: `Permission0::AccumulatedStreamAmounts` (`max_values`: None, `max_size`: Some(112), added: 2587, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn enforcement_execute_permission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `583`
		//  Estimated: `71354`
		// Minimum execution time: 39_000_000 picoseconds.
		Weight::from_parts(40_000_000, 71354)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	fn set_enforcement_authority() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `393`
		//  Estimated: `71354`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(14_000_000, 71354)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByDelegator` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByDelegator` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByRecipient` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByRecipient` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	fn delegate_curator_permission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `71354`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(16_000_000, 71354)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Torus0::Agents` (r:4 w:0)
	/// Proof: `Torus0::Agents` (`max_values`: None, `max_size`: Some(857), added: 3332, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:3 w:2)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(67889), added: 70364, mode: `MaxEncodedLen`)
	/// Storage: `Torus0::Namespaces` (r:2 w:0)
	/// Proof: `Torus0::Namespaces` (`max_values`: None, `max_size`: Some(347), added: 2822, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByDelegator` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByDelegator` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByRecipient` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByRecipient` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	fn delegate_namespace_permission() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1792`
		//  Estimated: `212082`
		// Minimum execution time: 65_000_000 picoseconds.
		Weight::from_parts(66_000_000, 212082)
			.saturating_add(RocksDbWeight::get().reads(12_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
}
