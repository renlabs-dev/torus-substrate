
//! Autogenerated weights for `pallet_governance`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 43.0.0
//! DATE: 2025-06-18, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `MacBook-Pro-de-Joao.local`, CPU: `<UNKNOWN>`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/release/torus-node
// benchmark
// pallet
// --pallet
// pallet_governance
// --chain
// dev
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// pallets/governance/src/weights.rs
// --template=./.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use polkadot_sdk::{
    frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}},
    *,
};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_governance`.
pub trait WeightInfo {
	fn add_allocator() -> Weight;
	fn remove_allocator() -> Weight;
	fn add_to_whitelist() -> Weight;
	fn remove_from_whitelist() -> Weight;
	fn submit_application() -> Weight;
	fn accept_application() -> Weight;
	fn deny_application() -> Weight;
	fn penalize_agent() -> Weight;
	fn add_global_params_proposal() -> Weight;
	fn add_global_custom_proposal() -> Weight;
	fn add_dao_treasury_transfer_proposal() -> Weight;
	fn vote_proposal() -> Weight;
	fn remove_vote_proposal() -> Weight;
	fn enable_vote_delegation() -> Weight;
	fn disable_vote_delegation() -> Weight;
	fn add_emission_proposal() -> Weight;
	fn toggle_agent_freezing() -> Weight;
}

/// Weights for `pallet_governance` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Governance::Allocators` (r:1 w:1)
	/// Proof: `Governance::Allocators` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	fn add_allocator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `6`
		//  Estimated: `3497`
		// Minimum execution time: 4_000_000 picoseconds.
		Weight::from_parts(5_000_000, 3497)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Governance::Allocators` (r:1 w:1)
	/// Proof: `Governance::Allocators` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	fn remove_allocator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `62`
		//  Estimated: `3497`
		// Minimum execution time: 6_000_000 picoseconds.
		Weight::from_parts(6_000_000, 3497)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Permission0::PermissionsByGrantee` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantee` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(7535), added: 10010, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByGrantor` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantor` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Governance::Whitelist` (r:1 w:1)
	/// Proof: `Governance::Whitelist` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Governance::AgentApplications` (r:1 w:0)
	/// Proof: `Governance::AgentApplications` (`max_values`: None, `max_size`: Some(357), added: 2832, mode: `MaxEncodedLen`)
	fn add_to_whitelist() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `91`
		//  Estimated: `11000`
		// Minimum execution time: 28_000_000 picoseconds.
		Weight::from_parts(29_000_000, 11000)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `Permission0::PermissionsByGrantee` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantee` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(7535), added: 10010, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByGrantor` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantor` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Governance::Whitelist` (r:1 w:1)
	/// Proof: `Governance::Whitelist` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Governance::AgentApplications` (r:1 w:0)
	/// Proof: `Governance::AgentApplications` (`max_values`: None, `max_size`: Some(357), added: 2832, mode: `MaxEncodedLen`)
	/// Storage: `Torus0::Agents` (r:1 w:0)
	/// Proof: `Torus0::Agents` (`max_values`: None, `max_size`: Some(857), added: 3332, mode: `MaxEncodedLen`)
	fn remove_from_whitelist() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `116`
		//  Estimated: `11000`
		// Minimum execution time: 31_000_000 picoseconds.
		Weight::from_parts(32_000_000, 11000)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `Governance::Whitelist` (r:1 w:0)
	/// Proof: `Governance::Whitelist` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Governance::AgentApplications` (r:1 w:1)
	/// Proof: `Governance::AgentApplications` (`max_values`: None, `max_size`: Some(357), added: 2832, mode: `MaxEncodedLen`)
	/// Storage: `Governance::GlobalGovernanceConfig` (r:1 w:0)
	/// Proof: `Governance::GlobalGovernanceConfig` (`max_values`: Some(1), `max_size`: Some(73), added: 568, mode: `MaxEncodedLen`)
	/// Storage: `Governance::DaoTreasuryAddress` (r:1 w:0)
	/// Proof: `Governance::DaoTreasuryAddress` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn submit_application() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `306`
		//  Estimated: `6196`
		// Minimum execution time: 55_000_000 picoseconds.
		Weight::from_parts(56_000_000, 6196)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Permission0::PermissionsByGrantee` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantee` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(7535), added: 10010, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByGrantor` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantor` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Governance::AgentApplications` (r:1 w:1)
	/// Proof: `Governance::AgentApplications` (`max_values`: None, `max_size`: Some(357), added: 2832, mode: `MaxEncodedLen`)
	/// Storage: `Governance::DaoTreasuryAddress` (r:1 w:0)
	/// Proof: `Governance::DaoTreasuryAddress` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Governance::Whitelist` (r:0 w:1)
	/// Proof: `Governance::Whitelist` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	fn accept_application() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `469`
		//  Estimated: `11000`
		// Minimum execution time: 72_000_000 picoseconds.
		Weight::from_parts(74_000_000, 11000)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: `Permission0::PermissionsByGrantee` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantee` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(7535), added: 10010, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByGrantor` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantor` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Governance::AgentApplications` (r:1 w:1)
	/// Proof: `Governance::AgentApplications` (`max_values`: None, `max_size`: Some(357), added: 2832, mode: `MaxEncodedLen`)
	fn deny_application() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `175`
		//  Estimated: `11000`
		// Minimum execution time: 28_000_000 picoseconds.
		Weight::from_parts(29_000_000, 11000)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `Permission0::PermissionsByGrantee` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantee` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(7535), added: 10010, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByGrantor` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantor` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Torus0::Agents` (r:1 w:1)
	/// Proof: `Torus0::Agents` (`max_values`: None, `max_size`: Some(857), added: 3332, mode: `MaxEncodedLen`)
	fn penalize_agent() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `160`
		//  Estimated: `11000`
		// Minimum execution time: 27_000_000 picoseconds.
		Weight::from_parts(28_000_000, 11000)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `Governance::GlobalGovernanceConfig` (r:1 w:0)
	/// Proof: `Governance::GlobalGovernanceConfig` (`max_values`: Some(1), `max_size`: Some(73), added: 568, mode: `MaxEncodedLen`)
	/// Storage: `Governance::DaoTreasuryAddress` (r:1 w:0)
	/// Proof: `Governance::DaoTreasuryAddress` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Governance::Proposals` (r:1 w:1)
	/// Proof: `Governance::Proposals` (`max_values`: None, `max_size`: Some(4294967295), added: 2474, mode: `MaxEncodedLen`)
	fn add_global_params_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `205`
		//  Estimated: `6196`
		// Minimum execution time: 50_000_000 picoseconds.
		Weight::from_parts(51_000_000, 6196)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Governance::GlobalGovernanceConfig` (r:1 w:0)
	/// Proof: `Governance::GlobalGovernanceConfig` (`max_values`: Some(1), `max_size`: Some(73), added: 568, mode: `MaxEncodedLen`)
	/// Storage: `Governance::DaoTreasuryAddress` (r:1 w:0)
	/// Proof: `Governance::DaoTreasuryAddress` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Governance::Proposals` (r:1 w:1)
	/// Proof: `Governance::Proposals` (`max_values`: None, `max_size`: Some(4294967295), added: 2474, mode: `MaxEncodedLen`)
	fn add_global_custom_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `205`
		//  Estimated: `6196`
		// Minimum execution time: 50_000_000 picoseconds.
		Weight::from_parts(51_000_000, 6196)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Governance::GlobalGovernanceConfig` (r:1 w:0)
	/// Proof: `Governance::GlobalGovernanceConfig` (`max_values`: Some(1), `max_size`: Some(73), added: 568, mode: `MaxEncodedLen`)
	/// Storage: `Governance::DaoTreasuryAddress` (r:1 w:0)
	/// Proof: `Governance::DaoTreasuryAddress` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Governance::Proposals` (r:1 w:1)
	/// Proof: `Governance::Proposals` (`max_values`: None, `max_size`: Some(4294967295), added: 2474, mode: `MaxEncodedLen`)
	fn add_dao_treasury_transfer_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `204`
		//  Estimated: `6196`
		// Minimum execution time: 50_000_000 picoseconds.
		Weight::from_parts(51_000_000, 6196)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Governance::Proposals` (r:1 w:1)
	/// Proof: `Governance::Proposals` (`max_values`: None, `max_size`: Some(4294967295), added: 2474, mode: `MaxEncodedLen`)
	/// Storage: `Torus0::StakedBy` (r:1 w:0)
	/// Proof: `Torus0::StakedBy` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Torus0::StakingTo` (r:2 w:0)
	/// Proof: `Torus0::StakingTo` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Governance::NotDelegatingVotingPower` (r:1 w:0)
	/// Proof: `Governance::NotDelegatingVotingPower` (`max_values`: Some(1), `max_size`: Some(4294967295), added: 494, mode: `MaxEncodedLen`)
	fn vote_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `316`
		//  Estimated: `6100`
		// Minimum execution time: 21_000_000 picoseconds.
		Weight::from_parts(22_000_000, 6100)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Governance::Proposals` (r:1 w:1)
	/// Proof: `Governance::Proposals` (`max_values`: None, `max_size`: Some(4294967295), added: 2474, mode: `MaxEncodedLen`)
	fn remove_vote_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `216`
		//  Estimated: `3464`
		// Minimum execution time: 10_000_000 picoseconds.
		Weight::from_parts(11_000_000, 3464)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Governance::NotDelegatingVotingPower` (r:1 w:1)
	/// Proof: `Governance::NotDelegatingVotingPower` (`max_values`: Some(1), `max_size`: Some(4294967295), added: 494, mode: `MaxEncodedLen`)
	fn enable_vote_delegation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `6`
		//  Estimated: `1484`
		// Minimum execution time: 3_000_000 picoseconds.
		Weight::from_parts(4_000_000, 1484)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Governance::NotDelegatingVotingPower` (r:1 w:1)
	/// Proof: `Governance::NotDelegatingVotingPower` (`max_values`: Some(1), `max_size`: Some(4294967295), added: 494, mode: `MaxEncodedLen`)
	fn disable_vote_delegation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `6`
		//  Estimated: `1484`
		// Minimum execution time: 3_000_000 picoseconds.
		Weight::from_parts(4_000_000, 1484)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Governance::GlobalGovernanceConfig` (r:1 w:0)
	/// Proof: `Governance::GlobalGovernanceConfig` (`max_values`: Some(1), `max_size`: Some(73), added: 568, mode: `MaxEncodedLen`)
	/// Storage: `Governance::DaoTreasuryAddress` (r:1 w:0)
	/// Proof: `Governance::DaoTreasuryAddress` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Governance::Proposals` (r:1 w:1)
	/// Proof: `Governance::Proposals` (`max_values`: None, `max_size`: Some(4294967295), added: 2474, mode: `MaxEncodedLen`)
	fn add_emission_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `204`
		//  Estimated: `6196`
		// Minimum execution time: 50_000_000 picoseconds.
		Weight::from_parts(51_000_000, 6196)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Permission0::PermissionsByGrantee` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantee` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(7535), added: 10010, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByGrantor` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantor` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Governance::AgentsFrozen` (r:1 w:1)
	/// Proof: `Governance::AgentsFrozen` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	fn toggle_agent_freezing() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `48`
		//  Estimated: `11000`
		// Minimum execution time: 24_000_000 picoseconds.
		Weight::from_parts(25_000_000, 11000)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `Governance::Allocators` (r:1 w:1)
	/// Proof: `Governance::Allocators` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	fn add_allocator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `6`
		//  Estimated: `3497`
		// Minimum execution time: 4_000_000 picoseconds.
		Weight::from_parts(5_000_000, 3497)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Governance::Allocators` (r:1 w:1)
	/// Proof: `Governance::Allocators` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	fn remove_allocator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `62`
		//  Estimated: `3497`
		// Minimum execution time: 6_000_000 picoseconds.
		Weight::from_parts(6_000_000, 3497)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Permission0::PermissionsByGrantee` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantee` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(7535), added: 10010, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByGrantor` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantor` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Governance::Whitelist` (r:1 w:1)
	/// Proof: `Governance::Whitelist` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Governance::AgentApplications` (r:1 w:0)
	/// Proof: `Governance::AgentApplications` (`max_values`: None, `max_size`: Some(357), added: 2832, mode: `MaxEncodedLen`)
	fn add_to_whitelist() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `91`
		//  Estimated: `11000`
		// Minimum execution time: 28_000_000 picoseconds.
		Weight::from_parts(29_000_000, 11000)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `Permission0::PermissionsByGrantee` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantee` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(7535), added: 10010, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByGrantor` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantor` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Governance::Whitelist` (r:1 w:1)
	/// Proof: `Governance::Whitelist` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Governance::AgentApplications` (r:1 w:0)
	/// Proof: `Governance::AgentApplications` (`max_values`: None, `max_size`: Some(357), added: 2832, mode: `MaxEncodedLen`)
	/// Storage: `Torus0::Agents` (r:1 w:0)
	/// Proof: `Torus0::Agents` (`max_values`: None, `max_size`: Some(857), added: 3332, mode: `MaxEncodedLen`)
	fn remove_from_whitelist() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `116`
		//  Estimated: `11000`
		// Minimum execution time: 31_000_000 picoseconds.
		Weight::from_parts(32_000_000, 11000)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `Governance::Whitelist` (r:1 w:0)
	/// Proof: `Governance::Whitelist` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `Governance::AgentApplications` (r:1 w:1)
	/// Proof: `Governance::AgentApplications` (`max_values`: None, `max_size`: Some(357), added: 2832, mode: `MaxEncodedLen`)
	/// Storage: `Governance::GlobalGovernanceConfig` (r:1 w:0)
	/// Proof: `Governance::GlobalGovernanceConfig` (`max_values`: Some(1), `max_size`: Some(73), added: 568, mode: `MaxEncodedLen`)
	/// Storage: `Governance::DaoTreasuryAddress` (r:1 w:0)
	/// Proof: `Governance::DaoTreasuryAddress` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn submit_application() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `306`
		//  Estimated: `6196`
		// Minimum execution time: 55_000_000 picoseconds.
		Weight::from_parts(56_000_000, 6196)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Permission0::PermissionsByGrantee` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantee` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(7535), added: 10010, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByGrantor` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantor` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Governance::AgentApplications` (r:1 w:1)
	/// Proof: `Governance::AgentApplications` (`max_values`: None, `max_size`: Some(357), added: 2832, mode: `MaxEncodedLen`)
	/// Storage: `Governance::DaoTreasuryAddress` (r:1 w:0)
	/// Proof: `Governance::DaoTreasuryAddress` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Governance::Whitelist` (r:0 w:1)
	/// Proof: `Governance::Whitelist` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	fn accept_application() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `469`
		//  Estimated: `11000`
		// Minimum execution time: 72_000_000 picoseconds.
		Weight::from_parts(74_000_000, 11000)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: `Permission0::PermissionsByGrantee` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantee` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(7535), added: 10010, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByGrantor` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantor` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Governance::AgentApplications` (r:1 w:1)
	/// Proof: `Governance::AgentApplications` (`max_values`: None, `max_size`: Some(357), added: 2832, mode: `MaxEncodedLen`)
	fn deny_application() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `175`
		//  Estimated: `11000`
		// Minimum execution time: 28_000_000 picoseconds.
		Weight::from_parts(29_000_000, 11000)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `Permission0::PermissionsByGrantee` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantee` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(7535), added: 10010, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByGrantor` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantor` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Torus0::Agents` (r:1 w:1)
	/// Proof: `Torus0::Agents` (`max_values`: None, `max_size`: Some(857), added: 3332, mode: `MaxEncodedLen`)
	fn penalize_agent() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `160`
		//  Estimated: `11000`
		// Minimum execution time: 27_000_000 picoseconds.
		Weight::from_parts(28_000_000, 11000)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `Governance::GlobalGovernanceConfig` (r:1 w:0)
	/// Proof: `Governance::GlobalGovernanceConfig` (`max_values`: Some(1), `max_size`: Some(73), added: 568, mode: `MaxEncodedLen`)
	/// Storage: `Governance::DaoTreasuryAddress` (r:1 w:0)
	/// Proof: `Governance::DaoTreasuryAddress` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Governance::Proposals` (r:1 w:1)
	/// Proof: `Governance::Proposals` (`max_values`: None, `max_size`: Some(4294967295), added: 2474, mode: `MaxEncodedLen`)
	fn add_global_params_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `205`
		//  Estimated: `6196`
		// Minimum execution time: 50_000_000 picoseconds.
		Weight::from_parts(51_000_000, 6196)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Governance::GlobalGovernanceConfig` (r:1 w:0)
	/// Proof: `Governance::GlobalGovernanceConfig` (`max_values`: Some(1), `max_size`: Some(73), added: 568, mode: `MaxEncodedLen`)
	/// Storage: `Governance::DaoTreasuryAddress` (r:1 w:0)
	/// Proof: `Governance::DaoTreasuryAddress` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Governance::Proposals` (r:1 w:1)
	/// Proof: `Governance::Proposals` (`max_values`: None, `max_size`: Some(4294967295), added: 2474, mode: `MaxEncodedLen`)
	fn add_global_custom_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `205`
		//  Estimated: `6196`
		// Minimum execution time: 50_000_000 picoseconds.
		Weight::from_parts(51_000_000, 6196)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Governance::GlobalGovernanceConfig` (r:1 w:0)
	/// Proof: `Governance::GlobalGovernanceConfig` (`max_values`: Some(1), `max_size`: Some(73), added: 568, mode: `MaxEncodedLen`)
	/// Storage: `Governance::DaoTreasuryAddress` (r:1 w:0)
	/// Proof: `Governance::DaoTreasuryAddress` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Governance::Proposals` (r:1 w:1)
	/// Proof: `Governance::Proposals` (`max_values`: None, `max_size`: Some(4294967295), added: 2474, mode: `MaxEncodedLen`)
	fn add_dao_treasury_transfer_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `204`
		//  Estimated: `6196`
		// Minimum execution time: 50_000_000 picoseconds.
		Weight::from_parts(51_000_000, 6196)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Governance::Proposals` (r:1 w:1)
	/// Proof: `Governance::Proposals` (`max_values`: None, `max_size`: Some(4294967295), added: 2474, mode: `MaxEncodedLen`)
	/// Storage: `Torus0::StakedBy` (r:1 w:0)
	/// Proof: `Torus0::StakedBy` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Torus0::StakingTo` (r:2 w:0)
	/// Proof: `Torus0::StakingTo` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Governance::NotDelegatingVotingPower` (r:1 w:0)
	/// Proof: `Governance::NotDelegatingVotingPower` (`max_values`: Some(1), `max_size`: Some(4294967295), added: 494, mode: `MaxEncodedLen`)
	fn vote_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `316`
		//  Estimated: `6100`
		// Minimum execution time: 21_000_000 picoseconds.
		Weight::from_parts(22_000_000, 6100)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Governance::Proposals` (r:1 w:1)
	/// Proof: `Governance::Proposals` (`max_values`: None, `max_size`: Some(4294967295), added: 2474, mode: `MaxEncodedLen`)
	fn remove_vote_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `216`
		//  Estimated: `3464`
		// Minimum execution time: 10_000_000 picoseconds.
		Weight::from_parts(11_000_000, 3464)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Governance::NotDelegatingVotingPower` (r:1 w:1)
	/// Proof: `Governance::NotDelegatingVotingPower` (`max_values`: Some(1), `max_size`: Some(4294967295), added: 494, mode: `MaxEncodedLen`)
	fn enable_vote_delegation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `6`
		//  Estimated: `1484`
		// Minimum execution time: 3_000_000 picoseconds.
		Weight::from_parts(4_000_000, 1484)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Governance::NotDelegatingVotingPower` (r:1 w:1)
	/// Proof: `Governance::NotDelegatingVotingPower` (`max_values`: Some(1), `max_size`: Some(4294967295), added: 494, mode: `MaxEncodedLen`)
	fn disable_vote_delegation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `6`
		//  Estimated: `1484`
		// Minimum execution time: 3_000_000 picoseconds.
		Weight::from_parts(4_000_000, 1484)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Governance::GlobalGovernanceConfig` (r:1 w:0)
	/// Proof: `Governance::GlobalGovernanceConfig` (`max_values`: Some(1), `max_size`: Some(73), added: 568, mode: `MaxEncodedLen`)
	/// Storage: `Governance::DaoTreasuryAddress` (r:1 w:0)
	/// Proof: `Governance::DaoTreasuryAddress` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Governance::Proposals` (r:1 w:1)
	/// Proof: `Governance::Proposals` (`max_values`: None, `max_size`: Some(4294967295), added: 2474, mode: `MaxEncodedLen`)
	fn add_emission_proposal() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `204`
		//  Estimated: `6196`
		// Minimum execution time: 50_000_000 picoseconds.
		Weight::from_parts(51_000_000, 6196)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Permission0::PermissionsByGrantee` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantee` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::Permissions` (r:1 w:1)
	/// Proof: `Permission0::Permissions` (`max_values`: None, `max_size`: Some(7535), added: 10010, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByParticipants` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByParticipants` (`max_values`: None, `max_size`: Some(3266), added: 5741, mode: `MaxEncodedLen`)
	/// Storage: `Permission0::PermissionsByGrantor` (r:1 w:1)
	/// Proof: `Permission0::PermissionsByGrantor` (`max_values`: None, `max_size`: Some(3234), added: 5709, mode: `MaxEncodedLen`)
	/// Storage: `Governance::AgentsFrozen` (r:1 w:1)
	/// Proof: `Governance::AgentsFrozen` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
	fn toggle_agent_freezing() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `48`
		//  Estimated: `11000`
		// Minimum execution time: 24_000_000 picoseconds.
		Weight::from_parts(25_000_000, 11000)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
}
