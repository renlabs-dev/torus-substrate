# Justfile for torus-client

# Default network
default_net := "mainnet"

# Download metadata for a given network
download_metadata:
    @echo "Downloading metadata for both networks..."
    ./scripts/get-metadata.sh mainnet
    @echo "Metadata downloaded to data/metadata/mainnet.scale"
    ./scripts/get-metadata.sh testnet
    @echo "Metadata downloaded to data/metadata/testnet.scale"

# Generate interfaces from metadata for a given network
gen_interfaces: (download_metadata)
    @echo "Generating interfaces for both networks..."
    subxt codegen --file data/metadata/mainnet.scale | rustfmt > src/interfaces/mainnet.rs
    @echo "Generated interfaces in src/interfaces/mainnet.rs"
    subxt codegen --file data/metadata/testnet.scale | rustfmt > src/interfaces/testnet.rs
    @echo "Generated interfaces in src/interfaces/testnet.rs"

gen_wrappers: (gen_interfaces)
    @echo "Generating wrappers for both networks..."
    mkdir -p src/wrappers
    cargo run -p torus-client-wrapper-codegen -- --output src/wrappers.rs --force
    @echo "Generated wrappers in src/wrappers"

# Generate interfaces for live networks (mainnet and testnet)
gen_for_live: (gen_wrappers)
    @echo "Live network interfaces generated successfully"

# Build the client library
build:
    @echo "Building torus-client..."
    cargo build --package torus-client

# Run tests for the client library
test:
    @echo "Running tests for torus-client..."
    cargo test --package torus-client

# Clean build artifacts and optionally metadata
clean:
    @echo "Cleaning build artifacts..."
    cargo clean --package torus-client
    # rm -rf data/metadata/*.scale
    @echo "Cleaned build artifacts"
